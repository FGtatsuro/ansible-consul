---
# tasks file for consul
- name: Run specified tasks on current platform
  include: "{{ ansible_system }}.yml"
- block:
  - name: Ensure a directory related to run/daemon scripts exist
    file:
      path: "{{ consul_script_remote_dir }}"
      owner: "{{ consul_owner }}"
      group: "{{ consul_group }}"
      state: 'directory'
  - name: Ensure directories(for logging related to daemon) exist
    file:
      path: "{{ item }}"
      owner: "{{ consul_owner }}"
      group: "{{ consul_group }}"
      state: 'directory'
    with_items:
      - "{{ consul_daemon_stdout_log | dirname }}"
      - "{{ consul_daemon_stderr_log | dirname  }}"
  # Default value of consul_daemon_pidfile has /var/lock as parent directory.
  # On several linux, /var/lock already exists as symlink. Thus directory creation is failed.
  - name: Check path related to lock file of daemon
    stat:
      path: "{{ consul_daemon_pidfile | dirname  }}"
    register: stat_daemon_lockfile_dir
    changed_when: no
  - include_vars:
      file: "{{ ansible_system }}.yml"
      name: os_specified_vars
  - name: Ensure directory(for lock file of daemon) exist
    file:
      path: "{{ consul_daemon_pidfile | dirname }}"
      owner: 'root'
      group: "{{ os_specified_vars.root_group }}"
      mode: '0777'
      state: 'directory'
    when: not stat_daemon_lockfile_dir.stat.exists
  # http://docs.ansible.com/ansible/stat_module.html
  - name: Ensure directory(for lock file of daemon) has full permission.
    file:
      path: "{{ consul_daemon_pidfile | dirname }}"
      mode: '0777'
      state: 'directory'
    when: (stat_daemon_lockfile_dir.stat.exists is defined) and (not stat_daemon_lockfile_dir.stat.islnk)
  - name: Ensure directory bound to symlink(for lock file of daemon) has full permission.
    file:
      path: "{{ stat_daemon_lockfile_dir.stat.lnk_source }}"
      mode: '0777'
      state: 'directory'
    when: (stat_daemon_lockfile_dir.stat.exists is defined) and (stat_daemon_lockfile_dir.stat.islnk)
  - name: Resolve the dependency of daemon script
    pip:
      name: python-daemon
  - name: Set run/daemon scripts
    template:
      src: "{{ item }}"
      dest: "{{ consul_script_remote_dir }}/{{ item }}"
      owner: "{{ consul_owner }}"
      group: "{{ consul_group }}"
      mode: '0755'
    with_items:
      - services.sh
      - daemons.py
  become: yes
- block:
  - name: Ensure consul_config_remote_dir exists
    file:
      path: "{{ consul_config_remote_dir }}"
      owner: "{{ consul_owner }}"
      group: "{{ consul_group }}"
      state: 'directory'
  - name: Copy Consul config files from consul_config_src_dir to consul_config_remote_dir
    copy:
      src: "{{ consul_config_src_dir }}"
      dest: "{{ consul_config_remote_dir }}"
      owner: "{{ consul_owner }}"
      group: "{{ consul_group }}"
  - name: Ensure Consul config files are readable
    file:
      path: "{{ consul_config_remote_dir }}"
      recurse: yes
      mode: 'a+r'
  when: consul_config_src_dir is defined
  become: yes
